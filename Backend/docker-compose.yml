version: '3'

services:
  api-gateway:
    image: nginx:latest
    container_name: api-gateway
    ports:
      - "80:80"
    networks:
      - gateway-network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./jwt-auth.lua:/etc/nginx/jwt-auth.lua:ro
    depends_on:
      - auth-api
      - orders-api
    build: 
      dockerfile: Dockerfile
      args:
        - JWT_SECRET=4fcfc25be07f50a0f0f6214df8b495c0

  auth-api:
    build:
      context: ./auth_api
      dockerfile: Dockerfile
    container_name: auth-api
    environment:
      - DB_CONNECTION_STRING=user=admin password=pass dbname=users_db sslmode=disable host=users-db
      - JWT_SECRET=4fcfc25be07f50a0f0f6214df8b495c0
    depends_on:
      - users-db
    networks:
      - gateway-network
    ports:
      - "3000"

  users-db:
    image: postgres:latest
    container_name: users-db
    networks:
      - gateway-network
    environment:
      - POSTGRES_DB=users_db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=pass
    ports:
      - "5432:5432"

  orders-api:
    build:
      context: ./orders_api
      dockerfile: Dockerfile
    container_name: orders-api
    environment:
      - DB_CONNECTION_STRING=user=admin password=pass dbname=orders_db sslmode=disable host=orders-db port=5433
      - JWT_SECRET=4fcfc25be07f50a0f0f6214df8b495c0
    depends_on:
      - orders-db
    networks:
      - gateway-network
    ports:
      - "3000"

  orders-db:
    image: postgres:latest
    container_name: orders-db
    networks:
      - gateway-network
    environment:
      - POSTGRES_DB=orders_db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=pass
    ports:
      - "5433:5433"
    command: -p 5433


networks:
  gateway-network:
    driver: bridge
